version: '3.7'

services:

  database:
    image: "postgres:latest"
    container_name: database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DATASOURCE_USERNAME}
      - POSTGRES_PASSWORD=${DATASOURCE_PASSWORD}
    volumes:
      - postgres-data:${DATASOURCE_VOLUME}

  zookeeper:
    image: "wurstmeister/zookeeper:latest"
    container_name: zookeper
    ports:
      - "2181:2181"

  kafka:
    image: "wurstmeister/kafka:latest"
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  keycloak:
    image: "jboss/keycloak:latest"
    container_name: keycloak
    ports:
      - "8484:8484"

  bff:
    image: "${BFF_SERVICE_IMAGE_NAME}:${BFF_SERVICE_IMAGE_TAG}"
    build:
      context: bff
    container_name: bff
    depends_on:
      - zookeeper
      - kafka
      - database
    ports:
      - "8081:8080"

  user:
    image: "${USER_SERVICE_IMAGE_NAME}:${USER_SERVICE_IMAGE_TAG}"
    build:
      context: user
    container_name: user
    depends_on:
      - zookeeper
      - kafka
      - database
    ports:
      - "8082:8080"

  admin:
    image: "${ADMIN_SERVICE_IMAGE_NAME}:${ADMIN_SERVICE_IMAGE_TAG}"
    build:
      context: admin
    container_name: admin
    depends_on:
      - zookeeper
      - kafka
      - database
    ports:
      - "8083:8080"

volumes:
  kafka-data:
  postgres-data: